name: CD build & deploy

permissions:
  # This is required for requesting the OIDC JWT
  id-token: write

on:
  workflow_dispatch:
  push:
    branches: [master]

jobs:
  ci:
    name: Test & build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use local integration action
        uses: ./.github/actions/integration

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Read Node.js version from .nvmrc
        id: node-version-reader
        shell: bash
        run: echo "NODE_VERSION=$(bin/read_node_version.sh)" >> $GITHUB_OUTPUT

      - name: Generate image tag
        id: tag-generator
        shell: bash
        run: echo "TAG=$(bin/generate_docker_tag.sh)" >> $GITHUB_OUTPUT

      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          push: true
          file: Dockerfile.prod
          tags: ${{ steps.tag-generator.outputs.TAG }}:latest, ${{ steps.tag-generator.outputs.TAG }}:${{ github.sha }}
          build-args: |
            "NODE_VERSION=${{ steps.node-version-reader.outputs.NODE_VERSION }}"

      - name: Get authorization from GCP
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Authorize with GKE cluster
        uses: "google-github-actions/get-gke-credentials@v1"
        with:
          cluster_name: ${{ secrets.GCP_GKE_CLUSTER_NAME }}

      - name: Deploy the code
        run: kubectl rollout restart deployment front-main-deployment
